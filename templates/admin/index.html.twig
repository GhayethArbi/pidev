{% extends 'base_admin.html.twig' %}

{% block title %}Recette{% endblock %}

{% block body %}
    <!-- Page Title -->
     <div class="pagetitle">
      <h1> Nutrition </h1>
      <nav>
        <ol class="breadcrumb">
          <li class="breadcrumb-item"><a href="index.html">Home</a></li>
          <li class="breadcrumb-item ">Module Nutrition</li> 
          <li class="breadcrumb-item active">Recettes</li>
        </ol>
      </nav>
    </div>    
  <!--end Page Title -->

    <section class="section dashboard">
      <div class="row">
    <div class="col-lg-8">
    <div class="card">
    <div class="card-body">  
    <h5 class="card-title">All recipes</h5>            
    <div class="row">

     
       <a href="{{ path('app_name_new') }}"><button class="btn btn-dark" > <i class="ri-add-circle-line"> &nbsp Create new</i></button></a>
    

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Category</th>
                <th>Description</th>
                <th>Date</th>
                <th >Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for recette in recettes %}
            <tr>
                <td>{{ recette.id }}</td>
                <td >{{ recette.name }}</td>
                <td >
                {% if recette.category == "Breakfast" %}
              <span class="badge bg-success">{{ recette.category }}</span>
                {% elseif  recette.category == "Lunch" %}
              <span class="badge bg-primary">{{ recette.category }}</span> 
              {% elseif  recette.category == "Dinner" %}
              <span class="badge bg-warning">{{ recette.category }}</span> 
              {% elseif recette.category == "Snacks"  %}
              <span class="badge bg-light text-dark">{{ recette.category }}</span>
              {% endif %}
              </td>
                <td >{{ recette.description | slice(0,20) }}</td>
              <td >{{ recette.date ? recette.date|date('Y-m-d') : '' }}</td>
                <td>
                    <a href="{{ path('app_name_edit', {'id': recette.id}) }}"><button class="btn btn-dark"><i class="ri-edit-2-line">&nbsp edit</i></button></a>              
                <a href="{{ path('app_name_show', {'id': recette.id}) }}"><button class="btn btn-outline-secondary">more details</button></a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="6">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    </div>
</div>
</div>
</div>
<!-- stat -->
 <div class="col-lg-4">
 
          <div class="row">
    <!-- recipes stats -->
        <div class="card">
     
         <div class="card-body">
              <h5 class="card-title">Column Chart</h5>

              <!-- Column Chart -->
              <div id="columnChart"></div>

              <script>
                document.addEventListener("DOMContentLoaded", () => {
                    const recettes = {{ recettes | json_encode }};
                     const categories = recettes.map(recette => recette.date); // Supposons que le nom de la recette est utilisé comme catégorie

                  new ApexCharts(document.querySelector("#columnChart"), {
                      series: [{
                name: 'Prix',
                data: categories
            }],
            chart: {
                type: 'bar',
                height: 350
            },
            plotOptions: {
                bar: {
                    horizontal: false,
                    columnWidth: '55%',
                    endingShape: 'rounded'
                },
            },
            dataLabels: {
                enabled: false
            },
            stroke: {
                show: true,
                width: 2,
                colors: ['transparent']
            },
            xaxis: {
                categories: categories,
            },
            yaxis: {
                title: {
                    text: 'Prix (en €)'
                }
            },
            fill: {
                opacity: 1
            },
            tooltip: {
                y: {
                    formatter: function(val) {
                        return "€ " + val;
                    }
                }
            }
        }).render();
    });
                 
              </script>
              <!-- End Column Chart -->

            </div>
           </div>
         
    <!--  recipes stats  -->
     <!-- Budget Report -->
          <div class="card">
            <div class="filter">
              <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
              <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                <li class="dropdown-header text-start">
                  <h6>Filter</h6>
                </li>

                <li><a class="dropdown-item" href="#">Today</a></li>
                <li><a class="dropdown-item" href="#">This Month</a></li>
                <li><a class="dropdown-item" href="#">This Year</a></li>
              </ul>
            </div>

            <div class="card-body pb-0">
              <h5 class="card-title">Recipes Report <span>| This Month</span></h5>

              <div id="budgetChart" style="min-height: 400px;" class="echart"></div>

              <script>
                document.addEventListener("DOMContentLoaded", () => {
                  var budgetChart = echarts.init(document.querySelector("#budgetChart")).setOption({
                    legend: {
                      data: ['Breakfast', 'Lunch']
                    },
                    radar: {
                      // shape: 'circle',
                      indicator: [{
                          name: 'Sales',
                          max: 6500
                        },
                        {
                          name: 'Administration',
                          max: 16000
                        },
                        {
                          name: 'Information Technology',
                          max: 30000
                        },
                        {
                          name: 'Customer Support',
                          max: 38000
                        },
                        {
                          name: 'Development',
                          max: 52000
                        },
                        {
                          name: 'Marketing',
                          max: 25000
                        }
                      ]
                    },
                    series: [{
                      name: 'Budget vs spending',
                      type: 'radar',
                      data: [{
                          value: [4200, 3000, 20000, 35000, 50000, 18000],
                          name: 'Allocated Budget'
                        },
                        {
                          value: [5000, 14000, 28000, 26000, 42000, 21000],
                          name: 'Actual Spending'
                        }
                      ]
                    }]
                  });
                });
              </script>

            </div>
          </div><!-- End Budget Report -->
        </div>
         
 </div>
 </div>
 </section>


{% endblock %}
