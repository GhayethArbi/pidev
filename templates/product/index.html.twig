{% extends 'base.html.twig' %}

{% block title %}Product index{% endblock %}

{% block body %}

    <h1>Product index</h1>

    <input type="text" id="category-search" placeholder="Search by category">
    <div class="datatable-top">
        <div class="datatable-dropdown">
            <label>
                <select id="datatable-selector" class="datatable-selector">
                    <option value="5">5</option>
                    <option value="10" selected="">10</option>
                    <option value="15">15</option>
                </select> entries per page
            </label>
        </div>
    </div>


    <table class="table">
        <thead>
        <tr>
            <th class="sortable" data-column="id">Id</th>
            <th class="sortable" data-column="name">Name</th>
            <th class="sortable" data-column="slug">Slug</th>
            <th>Illustration</th>
            <th class="sortable" data-column="subtitle">Subtitle</th>
            <th class="sortable" data-column="description">Description</th>
            <th class="sortable" data-column="price">Price</th>
            <th class="sortable" data-column="category">Category</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody id="product-table-body">
        {% for product in products %}
            <tr class="product-row category-{{ product.category|replace({' ': '-', '|': '-'}) }}">
                <td>{{ product.id }}</td>
                <td>{{ product.name }}</td>
                <td>{{ product.slug }}</td>
                <td>
                    {% if product.illustration %}
                        <img src="{{ asset('Uploads/' ~ product.illustration) }}" alt="Illustration" style="width:100px">
                    {% endif %}
                </td>
                <td>{{ product.subtitle }}</td>
                <td>{{ product.description }}</td>
                <td>{{ product.price }}</td>
                <td>{{ product.category }}</td>
                <td>
                    <a href="{{ path('app_product_show', {'id': product.id}) }}" class="btn btn-primary">show</a>
                    <a href="{{ path('app_product_edit', {'id': product.id}) }}" class="btn btn-primary">edit</a>
                    <a href="{{ path('app_product_delete',{'id':product.id}) }}" class="btn btn-danger">delete</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="9">No records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <div class="datatable-bottom">
        <div class="datatable-info">Showing 1 to <span id="max-products-per-page">{{ maxProductsPerPage }}</span> of {{ totalProducts }} entries</div>
        <nav class="datatable-pagination">
            <ul class="datatable-pagination-list" id="pagination-buttons">
            </ul>
        </nav>
    </div>
    <canvas id="categoryChart" width="400" height="200"></canvas>

    <a href="{{ path('app_product_new') }}" class="btn btn-dark">Create new</a>
    <a href="{{ path('export_products_to_pdf') }}" class="btn btn-dark">Export To PDF</a>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            let maxProductsPerPage = parseInt(document.getElementById('max-products-per-page').textContent);
            const productRows = document.querySelectorAll('.product-row');
            const totalProducts = {{ products|length }};
            let currentPage = 1;
            updatePagination();

            document.getElementById('datatable-selector').addEventListener('change', function () {
                maxProductsPerPage = parseInt(this.value);
                currentPage = 1;
                updatePagination();
            });

            function updatePagination() {
                const totalPages = Math.ceil(totalProducts / maxProductsPerPage);
                const paginationButtons = document.getElementById('pagination-buttons');

                paginationButtons.innerHTML = '';
                for (let i = 1; i <= totalPages; i++) {
                    const button = document.createElement('button');
                    button.setAttribute('data-page', i);
                    button.classList.add('datatable-pagination-list-item-link');
                    button.innerText = i;

                    button.addEventListener('click', function () {
                        currentPage = parseInt(this.getAttribute('data-page'));
                        updatePagination();
                    });

                    paginationButtons.appendChild(button);
                }

                const startIndex = (currentPage - 1) * maxProductsPerPage;
                const endIndex = Math.min(startIndex + maxProductsPerPage, totalProducts);

                productRows.forEach((row, index) => {
                    if (index >= startIndex && index < endIndex) {
                        row.style.display = 'table-row';
                    } else {
                        row.style.display = 'none';
                    }
                });

                const info = document.querySelector('.datatable-info');
                info.innerText = `Showing ${startIndex + 1} to ${endIndex} of ${totalProducts} entries`;
            }
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            document.getElementById('category-search').addEventListener('input', function () {
                const searchValue = this.value.trim().toLowerCase();
                const productRows = document.querySelectorAll('.product-row');

                productRows.forEach(row => {
                    const categoryCell = row.querySelector('td:nth-child(8)').textContent.toLowerCase();
                    if (categoryCell.includes(searchValue)) {
                        row.style.display = 'table-row';
                    } else {
                        row.style.display = 'none';
                    }
                });
            });
        });
    </script>

    <canvas id="categoryChart" width="400" height="200"></canvas>

    <script>
        document.addEventListener("DOMContentLoaded", () => {
            // Chart data
            var categoryData = {{ categoryData|json_encode|raw }};

            var ctx = document.getElementById('categoryChart').getContext('2d');
            var chart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: Object.keys(categoryData),
                    datasets: [{
                        label: 'Number of Products',
                        data: Object.values(categoryData),
                        backgroundColor: 'rgba(54, 162, 235, 0.5)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        });
    </script>
{% endblock %}
